[tox]
minversion = 3.20
isolated_build = True
# this refers to [tool.poetry.extras.dev] in pyproject.toml
# you probably don't need this line because poetry will install them
# in the commands list
# extras = dev
# which Python version to use
envlist = py39

[testenv]
# We must whitelist tools that are called before installing the package
# (Poetry is listed in [build-system], but that won't help because we call it directly.)
# Tools like pre-commit and flake8 will have the necessary version from dev-deps
whitelist_externals =
    poetry
skipdist = True
# If you your project contains extras (as in [tool.poetry.extras]),
# then add an `all` dependency list containing all of the extras (except dev),
# and add `--extras all` to `poetry install -v` below.
# the - prefix means ignore nonzero exit codes
commands =
    poetry check
    poetry build
    poetry install -v --extras "all"
    poetry run pre-commit run check-toml
    poetry run pre-commit run check-yaml
    poetry run pre-commit run check-json
    poetry run pytest --cov-report term-missing --cov=authcaptureproxy tests/
    poetry run bandit -r authcaptureproxy
    poetry run bandit -r tests --skip B101
    - poetry run flake8 authcaptureproxy
    - poetry run flake8 docs
    - poetry run mypy --show-error-codes authcaptureproxy
    - poetry run mypy --show-error-codes docs
    - poetry run mypy --show-error-codes tests
    - poetry run flake8 --ignore=D100,D101,D102,D103,D104,S101,W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293 tests
    poetry run sphinx-build -b html docs docs/html


[coverage:run]
source = 'authcaptureproxy'

[coverage:html]
directory = .coverage_report


[flake8]
max-line-length = 100
ignore = W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293
doctests = true
exclude =  .git
           __pycache__/
           build/
           dist/
import-order-style = google
docstring-convention = google
